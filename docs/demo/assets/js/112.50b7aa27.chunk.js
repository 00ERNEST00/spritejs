(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{561:function(n,t,e){"use strict";e.r(t),t.default="/* globals spritevue */\nconst Vue = spritevue.Vue;\nconst spritejs = spritevue.spritejs;\n\nconst {BaseSprite, registerNodeType} = spritejs;\n\nclass Ring extends BaseSprite {\n  pointCollision(evt) {\n    if(!super.pointCollision(evt)) return false;\n    const {offsetX, offsetY} = evt;\n    if(offsetX == null && offsetY == null) return true;\n    const innerRadius = this.attr('innerRadius'),\n      outerRadius = this.attr('outerRadius');\n    const bounding = this.boundingRect,\n      [cx, cy] = [bounding[0] + bounding[2] / 2, bounding[1] + bounding[3] / 2];\n    const distX = Math.abs(offsetX - cx),\n      distY = Math.abs(offsetY - cy);\n    const dist = Math.sqrt(distX ** 2 + distY ** 2);\n    return dist > innerRadius && dist <= outerRadius;\n  }\n\n  get contentSize() {\n    const outerRadius = this.attr('outerRadius');\n    return [outerRadius * 2, outerRadius * 2];\n  }\n\n  render(t, context) {\n    super.render(t, context);\n    const innerRadius = this.attr('innerRadius'),\n      outerRadius = this.attr('outerRadius'),\n      color = this.attr('color');\n\n    const lineWidth = outerRadius - innerRadius;\n\n    if(lineWidth > 0) {\n      context.beginPath();\n      context.arc(outerRadius, outerRadius, outerRadius - lineWidth / 2, 0, 2 * Math.PI);\n      context.strokeStyle = color;\n      context.lineWidth = lineWidth;\n      context.stroke();\n    }\n\n    return context;\n  }\n}\n\nRing.defineAttributes({\n  init(attr) {\n    attr.setDefault({\n      innerRadius: 0,\n      outerRadius: 50,\n      color: 'rgba(255, 0, 0, 1)',\n    });\n  },\n  innerRadius(attr, value) {\n    attr.clearFlow();\n    attr.set('innerRadius', parseFloat(value));\n  },\n  outerRadius(attr, value) {\n    attr.clearFlow();\n    attr.set('outerRadius', parseFloat(value));\n  },\n});\n\nregisterNodeType('ring', Ring);\n\nnew Vue({\n  el: '#app',\n  data() {\n    return {\n      font: '48px Arial',\n      fillColor: '#50f',\n      opacity: 0.5,\n    };\n  },\n  methods: {\n    enter() {\n      this.opacity = 1.0;\n    },\n    leave() {\n      this.opacity = 0.5;\n    },\n  },\n});"}}]);