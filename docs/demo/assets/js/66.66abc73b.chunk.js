(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{516:function(n,t,o){"use strict";o.r(t),t.default="(function () {\n  const {Scene, Sprite, Label, Group} = spritejs;\n  const scene = new Scene('#paper', {viewport: ['auto', 'auto'], resolution: [1200, 1200]});\n\n  const fglayer = scene.layer('fglayer');\n  fglayer.canvas.style.backgroundColor = '#1EAC61';\n\n  const button = new Group();\n  button.attr({\n    anchor: 0.5,\n    pos: [600, 600],\n  });\n  fglayer.append(button);\n\n  const buttonNormal = new Label('Get Started');\n  buttonNormal.attr({\n    font: '40px \"\u5b8b\u4f53\"',\n    fillColor: '#04773B',\n    lineHeight: 96,\n    textAlign: 'center',\n    size: [320, 96],\n    border: [4, '#178C4E'],\n    borderRadius: 48,\n  });\n  button.append(buttonNormal);\n\n  const buttonHover = new Sprite();\n  buttonHover.attr({\n    bgcolor: '#208B50',\n    height: 100,\n    width: 96,\n    opacity: 0,\n    borderRadius: 48,\n    zIndex: -1,\n  });\n  button.append(buttonHover);\n\n  /* eslint-disable no-console */\n  console.log('Place mouse hover the button...');\n  /* eslint-enable no-console */\n\n  let hoverAnim = null;\n\n  let touched = false;\n  // prevent mouseenter on mobile device\n  // mobile point events: touchstart > (touchmove)+ > touchend > (mouseenter) > mouseover > mousemove > mousedown > mouseup > click\n  // https://patrickhlauke.github.io/touch/tests/results/\n  button.on('mouseenter', async (evt) => {\n    if(touched) return;\n    fglayer.canvas.style.cursor = 'pointer';\n    buttonNormal.attr({\n      fillColor: '#fff',\n    });\n    if(hoverAnim) {\n      hoverAnim.cancel();\n      hoverAnim = null;\n    }\n    hoverAnim = buttonHover.animate([\n      {width: 96, opacity: 0},\n      {width: 324, opacity: 1},\n    ], {\n      duration: 300,\n      fill: 'forwards',\n      easing: 'ease-in',\n    });\n    await hoverAnim.finished;\n    hoverAnim = null;\n  }).on('mouseleave', async (evt) => {\n    if(touched) return;\n    fglayer.canvas.style.cursor = 'default';\n    buttonNormal.attr({\n      fillColor: '#04773B',\n    });\n    if(hoverAnim) {\n      hoverAnim.cancel();\n      hoverAnim = null;\n    }\n    hoverAnim = buttonHover.animate([\n      {width: 324, opacity: 1},\n      {width: 96, opacity: 0},\n    ], {\n      duration: 500,\n      fill: 'forwards',\n      easing: 'ease-out',\n    });\n    await hoverAnim.finished;\n    hoverAnim = null;\n  });\n\n  button.on('touchstart', (evt) => {\n    touched = true;\n    if(hoverAnim) {\n      hoverAnim.cancel();\n      hoverAnim = null;\n    }\n    buttonNormal.attr({\n      fillColor: '#fff',\n    });\n    buttonHover.attr({\n      width: 324,\n    });\n  });\n  button.on('touchend', (evt) => {\n    if(hoverAnim) {\n      hoverAnim.cancel();\n      hoverAnim = null;\n    }\n    buttonNormal.attr({\n      fillColor: '#04773B',\n    });\n    buttonHover.attr({\n      width: 0,\n    });\n  });\n\n  button.on('mousedown', (evt) => {\n    button.attr({\n      scale: 0.9,\n    });\n  }).on('mouseup', (evt) => {\n    button.attr({\n      scale: 1.0,\n    });\n  });\n\n  button.on('click', (evt) => {\n    /* eslint-disable no-console */\n    console.log('button clicked');\n    /* eslint-enable no-console */\n  });\n}());\n"}}]);