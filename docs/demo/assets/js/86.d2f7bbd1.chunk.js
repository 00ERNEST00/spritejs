(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{535:function(n,e,t){"use strict";t.r(e),e.default="const {Scene, ProtonRenderer} = spritejs;\nconst scene = new Scene('#paper', {\n  viewport: ['auto', 'auto'],\n  resolution: [800, 600],\n  stickMode: 'width',\n  stickExtend: true,\n});\nconst layer = scene.layer('fglayer');\nscene.container.style.backgroundColor = '#000';\n\nlayer.on('resolutionChange', (evt) => {\n  layer.context.globalCompositeOperation = 'screen';\n});\n\nfunction loadImage() {\n  const image = new Image();\n  image.onload = function (e) {\n    createProton(e.target);\n    tick();\n  };\n  image.src = 'https://p0.ssl.qhimg.com/t018109a4ae06d3e4d0.png';\n}\n\nlet proton;\nfunction createProton(image) {\n  proton = new Proton();\n  const emitter = new Proton.Emitter();\n  emitter.rate = new Proton.Rate(new Proton.Span(5, 13), 0.1);\n\n  emitter.addInitialize(new Proton.Mass(1));\n  emitter.addInitialize(new Proton.Body(image));\n  emitter.addInitialize(new Proton.P(new Proton.CircleZone(400, 500, 10)));\n  emitter.addInitialize(new Proton.Life(5, 7));\n  emitter.addInitialize(new Proton.V(new Proton.Span(2, 3), new Proton.Span(0, 30, true), 'polar'));\n\n  emitter.addBehaviour(new Proton.Scale(1, 0.2));\n  emitter.addBehaviour(new Proton.Alpha(1, 0.2));\n  emitter.emit();\n  proton.addEmitter(emitter);\n\n  layer.context.globalCompositeOperation = 'screen';\n  const renderer = new ProtonRenderer(layer);\n  // const renderer = new Proton.CanvasRenderer(layer.canvas)\n  proton.addRenderer(renderer);\n}\n\nfunction tick() {\n  requestAnimationFrame(tick);\n  proton.update();\n}\n\nloadImage();"}}]);