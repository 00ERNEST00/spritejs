(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{516:function(n,e,t){"use strict";t.r(e),e.default="const {Scene, Curvejs} = spritejs;\n\nconst scene = new Scene('#paper', {\n  resolution: [1000, 1000],\n  viewport: ['auto', 'auto'],\n});\n\nconst layer = scene.layer('fglayer');\nconst canvas = layer.canvas;\nlayer.canvas.style.backgroundColor = '#000000';\n\n\nconst stage = new Curvejs.Stage(layer);\n\nconst rd = () => {\n  return -2 + Math.random() * 2;\n};\n\nconst curve = new Curvejs.Curve({\n  color: '#00FF00',\n  points: [277, 327, 230, 314, 236, 326, 257, 326],\n  data: [rd(), rd(), rd(), rd(), rd(), rd(), rd(), rd()],\n  motion: function motion(points, data) {\n    points.forEach((item, index) => {\n      points[index] += data[index];\n\n      if(points[index] < 0) {\n        points[index] = 0;\n        data[index] *= -1;\n      }\n      if(index % 2 === 0) {\n        if(points[index] > canvas.width) {\n          points[index] = canvas.width;\n          data[index] *= -1;\n        }\n      } else if(points[index] > canvas.height) {\n        points[index] = canvas.height;\n        data[index] *= -1;\n      }\n    });\n  },\n});\nstage.add(curve);\n\nfunction tick() {\n  stage.update();\n  requestAnimationFrame(tick);\n}\n\ntick();\n"}}]);